{"version":3,"file":"gptPreAuction.js","mappings":"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","sources":["webpack://prebid.js/./modules/gptPreAuction.js"],"sourcesContent":["import {\n  deepAccess,\n  isAdUnitCodeMatchingSlot,\n  isGptPubadsDefined,\n  logInfo,\n  pick,\n  deepSetValue\n} from '../src/utils.js';\nimport {config} from '../src/config.js';\nimport {getHook} from '../src/hook.js';\nimport {find} from '../src/polyfill.js';\n\nconst MODULE_NAME = 'GPT Pre-Auction';\nexport let _currentConfig = {};\nlet hooksAdded = false;\n\nexport const appendGptSlots = adUnits => {\n  const { customGptSlotMatching } = _currentConfig;\n\n  if (!isGptPubadsDefined()) {\n    return;\n  }\n\n  const adUnitMap = adUnits.reduce((acc, adUnit) => {\n    acc[adUnit.code] = acc[adUnit.code] || [];\n    acc[adUnit.code].push(adUnit);\n    return acc;\n  }, {});\n\n  window.googletag.pubads().getSlots().forEach(slot => {\n    const matchingAdUnitCode = find(Object.keys(adUnitMap), customGptSlotMatching\n      ? customGptSlotMatching(slot)\n      : isAdUnitCodeMatchingSlot(slot));\n\n    if (matchingAdUnitCode) {\n      const adserver = {\n        name: 'gam',\n        adslot: sanitizeSlotPath(slot.getAdUnitPath())\n      };\n      adUnitMap[matchingAdUnitCode].forEach((adUnit) => {\n        deepSetValue(adUnit, 'ortb2Imp.ext.data.adserver', Object.assign({}, adUnit.ortb2Imp?.ext?.data?.adserver, adserver));\n      });\n    }\n  });\n};\n\nconst sanitizeSlotPath = (path) => {\n  const gptConfig = config.getConfig('gptPreAuction') || {};\n\n  if (gptConfig.mcmEnabled) {\n    return path.replace(/(^\\/\\d*),\\d*\\//, '$1/');\n  }\n\n  return path;\n}\n\nconst defaultPreAuction = (adUnit, adServerAdSlot) => {\n  const context = adUnit.ortb2Imp.ext.data;\n\n  // use pbadslot if supplied\n  if (context.pbadslot) {\n    return context.pbadslot;\n  }\n\n  // confirm that GPT is set up\n  if (!isGptPubadsDefined()) {\n    return;\n  }\n\n  // find all GPT slots with this name\n  var gptSlots = window.googletag.pubads().getSlots().filter(slot => slot.getAdUnitPath() === adServerAdSlot);\n\n  if (gptSlots.length === 0) {\n    return; // should never happen\n  }\n\n  if (gptSlots.length === 1) {\n    return adServerAdSlot;\n  }\n\n  // else the adunit code must be div id. append it.\n  return `${adServerAdSlot}#${adUnit.code}`;\n}\n\nexport const appendPbAdSlot = adUnit => {\n  const context = adUnit.ortb2Imp.ext.data;\n  const { customPbAdSlot } = _currentConfig;\n\n  // use context.pbAdSlot if set (if someone set it already, it will take precedence over others)\n  if (context.pbadslot) {\n    return;\n  }\n\n  if (customPbAdSlot) {\n    context.pbadslot = customPbAdSlot(adUnit.code, deepAccess(context, 'adserver.adslot'));\n    return;\n  }\n\n  // use data attribute 'data-adslotid' if set\n  try {\n    const adUnitCodeDiv = document.getElementById(adUnit.code);\n    if (adUnitCodeDiv.dataset.adslotid) {\n      context.pbadslot = adUnitCodeDiv.dataset.adslotid;\n      return;\n    }\n  } catch (e) {}\n  // banner adUnit, use GPT adunit if defined\n  if (deepAccess(context, 'adserver.adslot')) {\n    context.pbadslot = context.adserver.adslot;\n    return;\n  }\n  context.pbadslot = adUnit.code;\n  return true;\n};\n\nexport const makeBidRequestsHook = (fn, adUnits, ...args) => {\n  appendGptSlots(adUnits);\n  const { useDefaultPreAuction, customPreAuction } = _currentConfig;\n  adUnits.forEach(adUnit => {\n    // init the ortb2Imp if not done yet\n    adUnit.ortb2Imp = adUnit.ortb2Imp || {};\n    adUnit.ortb2Imp.ext = adUnit.ortb2Imp.ext || {};\n    adUnit.ortb2Imp.ext.data = adUnit.ortb2Imp.ext.data || {};\n    const context = adUnit.ortb2Imp.ext;\n\n    // if neither new confs set do old stuff\n    if (!customPreAuction && !useDefaultPreAuction) {\n      const usedAdUnitCode = appendPbAdSlot(adUnit);\n      // gpid should be set to itself if already set, or to what pbadslot was (as long as it was not adUnit code)\n      if (!context.gpid && !usedAdUnitCode) {\n        context.gpid = context.data.pbadslot;\n      }\n    } else {\n      let adserverSlot = deepAccess(context, 'data.adserver.adslot');\n      let result;\n      if (customPreAuction) {\n        result = customPreAuction(adUnit, adserverSlot);\n      } else if (useDefaultPreAuction) {\n        result = defaultPreAuction(adUnit, adserverSlot);\n      }\n      if (result) {\n        context.gpid = context.data.pbadslot = result;\n      }\n    }\n  });\n  return fn.call(this, adUnits, ...args);\n};\n\nconst handleSetGptConfig = moduleConfig => {\n  _currentConfig = pick(moduleConfig, [\n    'enabled', enabled => enabled !== false,\n    'customGptSlotMatching', customGptSlotMatching =>\n      typeof customGptSlotMatching === 'function' && customGptSlotMatching,\n    'customPbAdSlot', customPbAdSlot => typeof customPbAdSlot === 'function' && customPbAdSlot,\n    'customPreAuction', customPreAuction => typeof customPreAuction === 'function' && customPreAuction,\n    'useDefaultPreAuction', useDefaultPreAuction => useDefaultPreAuction === true,\n  ]);\n\n  if (_currentConfig.enabled) {\n    if (!hooksAdded) {\n      getHook('makeBidRequests').before(makeBidRequestsHook);\n      hooksAdded = true;\n    }\n  } else {\n    logInfo(`${MODULE_NAME}: Turning off module`);\n    _currentConfig = {};\n    getHook('makeBidRequests').getHooks({hook: makeBidRequestsHook}).remove();\n    hooksAdded = false;\n  }\n};\n\nconfig.getConfig('gptPreAuction', config => handleSetGptConfig(config.gptPreAuction));\nhandleSetGptConfig({});\n"],"names":["registerModule","__r0","deepAccess","isAdUnitCodeMatchingSlot","isGptPubadsDefined","logInfo","pick","deepSetValue","config","getHook","find","MODULE_NAME","_currentConfig","hooksAdded","appendGptSlots","adUnits","_currentConfig2","customGptSlotMatching","adUnitMap","reduce","acc","adUnit","code","push","window","googletag","pubads","getSlots","forEach","slot","matchingAdUnitCode","Object","keys","adserver","name","adslot","sanitizeSlotPath","getAdUnitPath","_adUnit$ortb2Imp","_adUnit$ortb2Imp$ext","_adUnit$ortb2Imp$ext$","assign","ortb2Imp","ext","data","path","gptConfig","getConfig","mcmEnabled","replace","defaultPreAuction","adServerAdSlot","context","pbadslot","gptSlots","filter","length","concat","appendPbAdSlot","_currentConfig3","customPbAdSlot","adUnitCodeDiv","document","getElementById","dataset","adslotid","e","makeBidRequestsHook","fn","_currentConfig4","useDefaultPreAuction","customPreAuction","usedAdUnitCode","gpid","adserverSlot","result","_len","arguments","args","Array","_key","call","apply","_this","handleSetGptConfig","moduleConfig","enabled","before","getHooks","hook","remove","gptPreAuction"],"sourceRoot":""}