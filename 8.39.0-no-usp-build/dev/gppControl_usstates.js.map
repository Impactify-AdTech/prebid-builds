{"version":3,"file":"gppControl_usstates.js","mappings":"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","sources":["webpack://prebid.js/./modules/gppControl_usstates.js"],"sourcesContent":["import {config} from '../src/config.js';\nimport {setupRules} from '../libraries/mspa/activityControls.js';\nimport {deepSetValue, prefixLog} from '../src/utils.js';\n\nconst FIELDS = {\n  Version: 0,\n  Gpc: 0,\n  SharingNotice: 0,\n  SaleOptOutNotice: 0,\n  SharingOptOutNotice: 0,\n  TargetedAdvertisingOptOutNotice: 0,\n  SensitiveDataProcessingOptOutNotice: 0,\n  SensitiveDataLimitUseNotice: 0,\n  SaleOptOut: 0,\n  SharingOptOut: 0,\n  TargetedAdvertisingOptOut: 0,\n  SensitiveDataProcessing: 12,\n  KnownChildSensitiveDataConsents: 2,\n  PersonalDataConsents: 0,\n  MspaCoveredTransaction: 0,\n  MspaOptOutOptionMode: 0,\n  MspaServiceProviderMode: 0,\n};\n\n/**\n * Generate a normalization function for converting US state strings to the usnat format.\n *\n * Scalar fields are copied over if they exist in the input (state) data, or set to null otherwise.\n * List fields are also copied, but forced to the \"correct\" length (by truncating or padding with nulls);\n * additionally, elements within them can be moved around using the `move` argument.\n *\n * @param {Array[String]} nullify? list of fields to force to null\n * @param {{}} move? Map from list field name to an index remapping for elements within that field (using 1 as the first index).\n *       For example, {SensitiveDataProcessing: {1: 2, 2: [1, 3]}} means \"rearrange SensitiveDataProcessing by moving\n *       the first element to the second position, and the second element to both the first and third position.\"\n * @param {({}, {}) => void} fn? an optional function to run once all the processing described above is complete;\n *       it's passed two arguments, the original (state) data, and its normalized (usnat) version.\n * @param fields\n * @returns {function({}): {}}\n */\nexport function normalizer({nullify = [], move = {}, fn}, fields = FIELDS) {\n  move = Object.fromEntries(Object.entries(move).map(([k, map]) => [k,\n    Object.fromEntries(Object.entries(map)\n      .map(([k, v]) => [k, Array.isArray(v) ? v : [v]])\n      .map(([k, v]) => [--k, v.map(el => --el)])\n    )])\n  );\n  return function (cd) {\n    const norm = Object.fromEntries(Object.entries(fields)\n      .map(([field, len]) => {\n        let val = null;\n        if (len > 0) {\n          val = Array(len).fill(null);\n          if (Array.isArray(cd[field])) {\n            const remap = move[field] || {};\n            const done = [];\n            cd[field].forEach((el, i) => {\n              const [dest, moved] = remap.hasOwnProperty(i) ? [remap[i], true] : [[i], false];\n              dest.forEach(d => {\n                if (d < len && !done.includes(d)) {\n                  val[d] = el;\n                  moved && done.push(d);\n                }\n              });\n            });\n          }\n        } else if (cd[field] != null) {\n          val = Array.isArray(cd[field]) ? null : cd[field];\n        }\n        return [field, val];\n      }));\n    nullify.forEach(path => deepSetValue(norm, path, null));\n    fn && fn(cd, norm);\n    return norm;\n  };\n}\n\nfunction scalarMinorsAreChildren(original, normalized) {\n  normalized.KnownChildSensitiveDataConsents = original.KnownChildSensitiveDataConsents === 0 ? [0, 0] : [1, 1];\n}\n\nexport const NORMALIZATIONS = {\n  // normalization rules - convert state consent into usnat consent\n  // https://docs.prebid.org/features/mspa-usnat.html\n  7: (consent) => consent,\n  8: normalizer({\n    move: {\n      SensitiveDataProcessing: {\n        1: 9,\n        2: 10,\n        3: 8,\n        4: [1, 2],\n        5: 12,\n        8: 3,\n        9: 4,\n      }\n    },\n    fn(original, normalized) {\n      if (original.KnownChildSensitiveDataConsents.some(el => el !== 0)) {\n        normalized.KnownChildSensitiveDataConsents = [1, 1];\n      }\n    }\n  }),\n  9: normalizer({fn: scalarMinorsAreChildren}),\n  10: normalizer({fn: scalarMinorsAreChildren}),\n  11: normalizer({\n    move: {\n      SensitiveDataProcessing: {\n        3: 4,\n        4: 5,\n        5: 3,\n      }\n    },\n    fn: scalarMinorsAreChildren\n  }),\n  12: normalizer({\n    fn(original, normalized) {\n      const cc = original.KnownChildSensitiveDataConsents;\n      let repl;\n      if (!cc.some(el => el !== 0)) {\n        repl = [0, 0];\n      } else if (cc[1] === 2 && cc[2] === 2) {\n        repl = [2, 1];\n      } else {\n        repl = [1, 1];\n      }\n      normalized.KnownChildSensitiveDataConsents = repl;\n    }\n  })\n};\n\nexport const DEFAULT_SID_MAPPING = {\n  8: 'usca',\n  9: 'usva',\n  10: 'usco',\n  11: 'usut',\n  12: 'usct'\n};\n\nexport const getSections = (() => {\n  const allSIDs = Object.keys(DEFAULT_SID_MAPPING).map(Number);\n  return function ({sections = {}, sids = allSIDs} = {}) {\n    return sids.map(sid => {\n      const logger = prefixLog(`Cannot set up MSPA controls for SID ${sid}:`);\n      const ov = sections[sid] || {};\n      const normalizeAs = ov.normalizeAs || sid;\n      if (!NORMALIZATIONS.hasOwnProperty(normalizeAs)) {\n        logger.logError(`no normalization rules are known for SID ${normalizeAs}`)\n        return;\n      }\n      const api = ov.name || DEFAULT_SID_MAPPING[sid];\n      if (typeof api !== 'string') {\n        logger.logError(`cannot determine GPP section name`)\n        return;\n      }\n      return [\n        api,\n        [sid],\n        NORMALIZATIONS[normalizeAs]\n      ]\n    }).filter(el => el != null);\n  }\n})();\n\nconst handles = [];\n\nconfig.getConfig('consentManagement', (cfg) => {\n  const gppConf = cfg.consentManagement?.gpp;\n  if (gppConf) {\n    while (handles.length) {\n      handles.pop()();\n    }\n    getSections(gppConf?.mspa || {})\n      .forEach(([api, sids, normalize]) => handles.push(setupRules(api, sids, normalize)));\n  }\n});\n"],"names":["registerModule","__r0","config","setupRules","deepSetValue","prefixLog","FIELDS","Version","Gpc","SharingNotice","SaleOptOutNotice","SharingOptOutNotice","TargetedAdvertisingOptOutNotice","SensitiveDataProcessingOptOutNotice","SensitiveDataLimitUseNotice","SaleOptOut","SharingOptOut","TargetedAdvertisingOptOut","SensitiveDataProcessing","KnownChildSensitiveDataConsents","PersonalDataConsents","MspaCoveredTransaction","MspaOptOutOptionMode","MspaServiceProviderMode","normalizer","_ref","_ref$nullify","nullify","_ref$move","move","fn","fields","arguments","length","undefined","Object","fromEntries","entries","map","_ref2","_ref3","_slicedToArray","k","_ref4","_ref5","v","Array","isArray","_ref6","_ref7","el","cd","norm","_ref8","_ref9","field","len","val","fill","remap","done","forEach","i","_ref10","hasOwnProperty","_ref11","dest","moved","d","includes","push","path","scalarMinorsAreChildren","original","normalized","NORMALIZATIONS","_","consent","some","cc","repl","DEFAULT_SID_MAPPING","getSections","allSIDs","keys","Number","_ref12","_ref12$sections","sections","_ref12$sids","sids","sid","logger","concat","ov","normalizeAs","logError","api","name","filter","handles","getConfig","cfg","_cfg$consentManagemen","gppConf","consentManagement","gpp","pop","mspa","_ref13","_ref14","normalize"],"sourceRoot":""}