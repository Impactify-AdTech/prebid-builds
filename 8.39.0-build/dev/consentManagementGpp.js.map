{"version":3,"file":"consentManagementGpp.js","mappings":"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","sources":["webpack://prebid.js/./modules/consentManagementGpp.js","webpack://prebid.js/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://prebid.js/./node_modules/@babel/runtime/helpers/esm/superPropBase.js"],"sourcesContent":["/**\n * This module adds GPP consentManagement support to prebid.js.  It interacts with\n * supported CMPs (Consent Management Platforms) to grab the user's consent information\n * and make it available for any GPP supported adapters to read/pass this information to\n * their system and for various other features/modules in Prebid.js.\n */\nimport {deepSetValue, isEmpty, isNumber, isPlainObject, isStr, logError, logInfo, logWarn} from '../src/utils.js';\nimport {config} from '../src/config.js';\nimport {gppDataHandler} from '../src/adapterManager.js';\nimport {timedAuctionHook} from '../src/utils/perfMetrics.js';\nimport {enrichFPD} from '../src/fpd/enrichment.js';\nimport {getGlobal} from '../src/prebidGlobal.js';\nimport {cmpClient, MODE_CALLBACK, MODE_MIXED, MODE_RETURN} from '../libraries/cmp/cmpClient.js';\nimport {GreedyPromise} from '../src/utils/promise.js';\nimport {buildActivityParams} from '../src/activities/params.js';\n\nconst DEFAULT_CMP = 'iab';\nconst DEFAULT_CONSENT_TIMEOUT = 10000;\n\nexport let userCMP;\nexport let consentTimeout;\nlet staticConsentData;\n\nlet consentData;\nlet addedConsentHook = false;\n\nfunction pipeCallbacks(fn, {onSuccess, onError}) {\n  new GreedyPromise((resolve) => resolve(fn())).then(onSuccess, (err) => {\n    if (err instanceof GPPError) {\n      onError(err.message, ...err.args);\n    } else {\n      onError(`GPP error:`, err);\n    }\n  });\n}\n\nfunction lookupStaticConsentData(callbacks) {\n  return pipeCallbacks(() => processCmpData(staticConsentData), callbacks);\n}\n\nconst GPP_10 = '1.0';\nconst GPP_11 = '1.1';\n\nclass GPPError {\n  constructor(message, arg) {\n    this.message = message;\n    this.args = arg == null ? [] : [arg];\n  }\n}\n\nexport class GPPClient {\n  static CLIENTS = {};\n\n  static register(apiVersion, defaultVersion = false) {\n    this.apiVersion = apiVersion;\n    this.CLIENTS[apiVersion] = this;\n    if (defaultVersion) {\n      this.CLIENTS.default = this;\n    }\n  }\n\n  static INST;\n\n  /**\n   * Ping the CMP to set up an appropriate client for it, and initialize it.\n   *\n   * @param mkCmp\n   * @returns {Promise<[GPPClient,Promise<{}>]>} a promise to two objects:\n   *  - a GPPClient that talks the best GPP dialect we know for the CMP's version;\n   *  - a promise to GPP data.\n   */\n  static init(mkCmp = cmpClient) {\n    let inst = this.INST;\n    if (!inst) {\n      let err;\n      const reset = () => err && (this.INST = null);\n      inst = this.INST = this.ping(mkCmp).catch(e => {\n        err = true;\n        reset();\n        throw e;\n      });\n      reset();\n    }\n    return inst.then(([client, pingData]) => [\n      client,\n      client.initialized ? client.refresh() : client.init(pingData)\n    ]);\n  }\n\n  /**\n   * Ping the CMP to determine its version and set up a client appropriate for it.\n   *\n   * @param mkCmp\n   * @returns {Promise<[GPPClient, {}]>} a promise to two objects:\n   *  - a GPPClient that talks the best GPP dialect we know for the CMP's version;\n   *  - the result from pinging the CMP.\n   */\n  static ping(mkCmp = cmpClient) {\n    const cmpOptions = {\n      apiName: '__gpp',\n      apiArgs: ['command', 'callback', 'parameter'], // do not pass version - not clear what it's for (or what we should use)\n    };\n\n    // in 1.0, 'ping' should return pingData but ignore callback;\n    // in 1.1 it should not return anything but run the callback\n    // the following looks for either - but once the version is known, produce a client that knows whether the\n    // rest of the interactions should pick return values or pass callbacks\n\n    const probe = mkCmp({...cmpOptions, mode: MODE_RETURN});\n    return new GreedyPromise((resolve, reject) => {\n      if (probe == null) {\n        reject(new GPPError('GPP CMP not found'));\n        return;\n      }\n      let done = false; // some CMPs do both return value and callbacks - avoid repeating log messages\n      const pong = (result, success) => {\n        if (done) return;\n        if (success != null && !success) {\n          reject(result);\n          return;\n        }\n        if (result == null) return;\n        done = true;\n        const cmpVersion = result?.gppVersion;\n        const Client = this.getClient(cmpVersion);\n        if (cmpVersion !== Client.apiVersion) {\n          logWarn(`Unrecognized GPP CMP version: ${cmpVersion}. Continuing using GPP API version ${Client}...`);\n        } else {\n          logInfo(`Using GPP version ${cmpVersion}`);\n        }\n        const mode = Client.apiVersion === GPP_10 ? MODE_MIXED : MODE_CALLBACK;\n        const client = new Client(\n          cmpVersion,\n          mkCmp({...cmpOptions, mode})\n        );\n        resolve([client, result]);\n      };\n\n      probe({\n        command: 'ping',\n        callback: pong\n      }).then((res) => pong(res, true), reject);\n    }).finally(() => {\n      probe && probe.close();\n    });\n  }\n\n  static getClient(cmpVersion) {\n    return this.CLIENTS.hasOwnProperty(cmpVersion) ? this.CLIENTS[cmpVersion] : this.CLIENTS.default;\n  }\n\n  #resolve;\n  #reject;\n  #pending = [];\n\n  initialized = false;\n\n  constructor(cmpVersion, cmp) {\n    this.apiVersion = this.constructor.apiVersion;\n    this.cmpVersion = cmp;\n    this.cmp = cmp;\n    [this.#resolve, this.#reject] = [0, 1].map(slot => (result) => {\n      while (this.#pending.length) {\n        this.#pending.pop()[slot](result);\n      }\n    });\n  }\n\n  /**\n   * initialize this client - update consent data if already available,\n   * and set up event listeners to also update on CMP changes\n   *\n   * @param pingData\n   * @returns {Promise<{}>} a promise to GPP consent data\n   */\n  init(pingData) {\n    const ready = this.updateWhenReady(pingData);\n    if (!this.initialized) {\n      this.initialized = true;\n      this.cmp({\n        command: 'addEventListener',\n        callback: (event, success) => {\n          if (success != null && !success) {\n            this.#reject(new GPPError('Received error response from CMP', event));\n          } else if (event?.pingData?.cmpStatus === 'error') {\n            this.#reject(new GPPError('CMP status is \"error\"; please check CMP setup', event));\n          } else if (this.isCMPReady(event?.pingData || {}) && this.events.includes(event?.eventName)) {\n            this.#resolve(this.updateConsent(event.pingData));\n          }\n        }\n      });\n    }\n    return ready;\n  }\n\n  refresh() {\n    return this.cmp({command: 'ping'}).then(this.updateWhenReady.bind(this));\n  }\n\n  /**\n   * Retrieve and store GPP consent data.\n   *\n   * @param pingData\n   * @returns {Promise<{}>} a promise to GPP consent data\n   */\n  updateConsent(pingData) {\n    return this.getGPPData(pingData).then((data) => {\n      if (data == null || isEmpty(data)) {\n        throw new GPPError('Received empty response from CMP', data);\n      }\n      return processCmpData(data);\n    }).then((data) => {\n      logInfo('Retrieved GPP consent from CMP:', data);\n      return data;\n    });\n  }\n\n  /**\n   * Return a promise to GPP consent data, to be retrieved the next time the CMP signals it's ready.\n   *\n   * @returns {Promise<{}>}\n   */\n  nextUpdate() {\n    return new GreedyPromise((resolve, reject) => {\n      this.#pending.push([resolve, reject]);\n    });\n  }\n\n  /**\n   * Return a promise to GPP consent data, to be retrieved immediately if the CMP is ready according to `pingData`,\n   * or as soon as it signals that it's ready otherwise.\n   *\n   * @param pingData\n   * @returns {Promise<{}>}\n   */\n  updateWhenReady(pingData) {\n    return this.isCMPReady(pingData) ? this.updateConsent(pingData) : this.nextUpdate();\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nclass GPP10Client extends GPPClient {\n  static {\n    super.register(GPP_10);\n  }\n\n  events = ['sectionChange', 'cmpStatus'];\n\n  isCMPReady(pingData) {\n    return pingData.cmpStatus === 'loaded';\n  }\n\n  getGPPData(pingData) {\n    const parsedSections = GreedyPromise.all(\n      (pingData.supportedAPIs || pingData.apiSupport || []).map((api) => this.cmp({\n        command: 'getSection',\n        parameter: api\n      }).catch(err => {\n        logWarn(`Could not retrieve GPP section '${api}'`, err);\n      }).then((section) => [api, section]))\n    ).then(sections => {\n      // parse single section object into [core, gpc] to uniformize with 1.1 parsedSections\n      return Object.fromEntries(\n        sections.filter(([_, val]) => val != null)\n          .map(([api, section]) => {\n            const subsections = [\n              Object.fromEntries(Object.entries(section).filter(([k]) => k !== 'Gpc'))\n            ];\n            if (section.Gpc != null) {\n              subsections.push({\n                SubsectionType: 1,\n                Gpc: section.Gpc\n              });\n            }\n            return [api, subsections];\n          })\n      );\n    });\n    return GreedyPromise.all([\n      this.cmp({command: 'getGPPData'}),\n      parsedSections\n    ]).then(([gppData, parsedSections]) => Object.assign({}, gppData, {parsedSections}));\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nclass GPP11Client extends GPPClient {\n  static {\n    super.register(GPP_11, true);\n  }\n\n  events = ['sectionChange', 'signalStatus'];\n\n  isCMPReady(pingData) {\n    return pingData.signalStatus === 'ready';\n  }\n\n  getGPPData(pingData) {\n    return GreedyPromise.resolve(pingData);\n  }\n}\n\n/**\n * This function handles interacting with an IAB compliant CMP to obtain the consent information of the user.\n * Given the async nature of the CMP's API, we pass in acting success/error callback functions to exit this function\n * based on the appropriate result.\n * @param {function({})} onSuccess acts as a success callback when CMP returns a value; pass along consentObjectfrom CMP\n * @param {function(string, ...{}?)} cmpError acts as an error callback while interacting with CMP; pass along an error message (string) and any extra error arguments (purely for logging)\n */\nexport function lookupIabConsent({onSuccess, onError}, mkCmp = cmpClient) {\n  pipeCallbacks(() => GPPClient.init(mkCmp).then(([client, gppDataPm]) => gppDataPm), {onSuccess, onError});\n}\n\n// add new CMPs here, with their dedicated lookup function\nconst cmpCallMap = {\n  'iab': lookupIabConsent,\n  'static': lookupStaticConsentData\n};\n\n/**\n * Look up consent data and store it in the `consentData` global as well as `adapterManager.js`' gdprDataHandler.\n *\n * @param cb A callback that takes: a boolean that is true if the auction should be canceled; an error message and extra\n * error arguments that will be undefined if there's no error.\n */\nfunction loadConsentData(cb) {\n  let isDone = false;\n  let timer = null;\n\n  function done(consentData, shouldCancelAuction, errMsg, ...extraArgs) {\n    if (timer != null) {\n      clearTimeout(timer);\n    }\n    isDone = true;\n    gppDataHandler.setConsentData(consentData);\n    if (typeof cb === 'function') {\n      cb(shouldCancelAuction, errMsg, ...extraArgs);\n    }\n  }\n\n  if (!cmpCallMap.hasOwnProperty(userCMP)) {\n    done(null, false, `GPP CMP framework (${userCMP}) is not a supported framework.  Aborting consentManagement module and resuming auction.`);\n    return;\n  }\n\n  const callbacks = {\n    onSuccess: (data) => done(data, false),\n    onError: function (msg, ...extraArgs) {\n      done(null, true, msg, ...extraArgs);\n    }\n  };\n  cmpCallMap[userCMP](callbacks);\n\n  if (!isDone) {\n    const onTimeout = () => {\n      const continueToAuction = (data) => {\n        done(data, false, 'GPP CMP did not load, continuing auction...');\n      };\n      pipeCallbacks(() => processCmpData(consentData), {\n        onSuccess: continueToAuction,\n        onError: () => continueToAuction(storeConsentData())\n      });\n    };\n    if (consentTimeout === 0) {\n      onTimeout();\n    } else {\n      timer = setTimeout(onTimeout, consentTimeout);\n    }\n  }\n}\n\n/**\n * Like `loadConsentData`, but cache and re-use previously loaded data.\n * @param cb\n */\nfunction loadIfMissing(cb) {\n  if (consentData) {\n    logInfo('User consent information already known.  Pulling internally stored information...');\n    // eslint-disable-next-line standard/no-callback-literal\n    cb(false);\n  } else {\n    loadConsentData(cb);\n  }\n}\n\n/**\n * If consentManagement module is enabled (ie included in setConfig), this hook function will attempt to fetch the\n * user's encoded consent string from the supported CMP.  Once obtained, the module will store this\n * data as part of a gppConsent object which gets transferred to adapterManager's gppDataHandler object.\n * This information is later added into the bidRequest object for any supported adapters to read/pass along to their system.\n * @param {object} reqBidsConfigObj required; This is the same param that's used in pbjs.requestBids.\n * @param {function} fn required; The next function in the chain, used by hook.js\n */\nexport const requestBidsHook = timedAuctionHook('gpp', function requestBidsHook(fn, reqBidsConfigObj) {\n  loadIfMissing(function (shouldCancelAuction, errMsg, ...extraArgs) {\n    if (errMsg) {\n      let log = logWarn;\n      if (shouldCancelAuction) {\n        log = logError;\n        errMsg = `${errMsg} Canceling auction as per consentManagement config.`;\n      }\n      log(errMsg, ...extraArgs);\n    }\n\n    if (shouldCancelAuction) {\n      fn.stopTiming();\n      if (typeof reqBidsConfigObj.bidsBackHandler === 'function') {\n        reqBidsConfigObj.bidsBackHandler();\n      } else {\n        logError('Error executing bidsBackHandler');\n      }\n    } else {\n      fn.call(this, reqBidsConfigObj);\n    }\n  });\n});\n\nfunction processCmpData(consentData) {\n  if (\n    (consentData?.applicableSections != null && !Array.isArray(consentData.applicableSections)) ||\n    (consentData?.gppString != null && !isStr(consentData.gppString)) ||\n    (consentData?.parsedSections != null && !isPlainObject(consentData.parsedSections))\n  ) {\n    throw new GPPError('CMP returned unexpected value during lookup process.', consentData);\n  }\n  return storeConsentData(consentData);\n}\n\n/**\n * Stores CMP data locally in module to make information available in adaptermanager.js for later in the auction\n * @param {{}} gppData the result of calling a CMP's `getGPPData` (or equivalent)\n * @param {{}} sectionData map from GPP section name to the result of calling a CMP's `getSection` (or equivalent)\n */\nexport function storeConsentData(gppData = {}) {\n  consentData = {\n    gppString: gppData?.gppString,\n    applicableSections: gppData?.applicableSections || [],\n    parsedSections: gppData?.parsedSections || {},\n    gppData: gppData\n  };\n  gppDataHandler.setConsentData(gppData);\n  return consentData;\n}\n\n/**\n * Simply resets the module's consentData variable back to undefined, mainly for testing purposes\n */\nexport function resetConsentData() {\n  consentData = undefined;\n  userCMP = undefined;\n  consentTimeout = undefined;\n  gppDataHandler.reset();\n  GPPClient.INST = null;\n}\n\n/**\n * A configuration function that initializes some module variables, as well as add a hook into the requestBids function\n * @param {{cmp:string, timeout:number, defaultGdprScope:boolean}} config required; consentManagement module config settings; cmp (string), timeout (int))\n */\nexport function setConsentConfig(config) {\n  config = config && config.gpp;\n  if (!config || typeof config !== 'object') {\n    logWarn('consentManagement.gpp config not defined, exiting consent manager module');\n    return;\n  }\n\n  if (isStr(config.cmpApi)) {\n    userCMP = config.cmpApi;\n  } else {\n    userCMP = DEFAULT_CMP;\n    logInfo(`consentManagement.gpp config did not specify cmp.  Using system default setting (${DEFAULT_CMP}).`);\n  }\n\n  if (isNumber(config.timeout)) {\n    consentTimeout = config.timeout;\n  } else {\n    consentTimeout = DEFAULT_CONSENT_TIMEOUT;\n    logInfo(`consentManagement.gpp config did not specify timeout.  Using system default setting (${DEFAULT_CONSENT_TIMEOUT}).`);\n  }\n\n  if (userCMP === 'static') {\n    if (isPlainObject(config.consentData)) {\n      staticConsentData = config.consentData;\n      consentTimeout = 0;\n    } else {\n      logError(`consentManagement.gpp config with cmpApi: 'static' did not specify consentData. No consents will be available to adapters.`);\n    }\n  }\n\n  logInfo('consentManagement.gpp module has been activated...');\n\n  if (!addedConsentHook) {\n    getGlobal().requestBids.before(requestBidsHook, 50);\n    buildActivityParams.before((next, params) => {\n      return next(Object.assign({gppConsent: gppDataHandler.getConsentData()}, params));\n    });\n  }\n  addedConsentHook = true;\n  gppDataHandler.enable();\n  loadConsentData(); // immediately look up consent data to make it available without requiring an auction\n}\n\nconfig.getConfig('consentManagement', config => setConsentConfig(config.consentManagement));\n\nexport function enrichFPDHook(next, fpd) {\n  return next(fpd.then(ortb2 => {\n    const consent = gppDataHandler.getConsentData();\n    if (consent) {\n      if (Array.isArray(consent.applicableSections)) {\n        deepSetValue(ortb2, 'regs.gpp_sid', consent.applicableSections);\n      }\n      deepSetValue(ortb2, 'regs.gpp', consent.gppString);\n    }\n    return ortb2;\n  }));\n}\n\nenrichFPD.before(enrichFPDHook);\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}"],"names":["registerModule","__r0","deepSetValue","isEmpty","isNumber","isPlainObject","isStr","logError","logInfo","logWarn","config","gppDataHandler","timedAuctionHook","enrichFPD","getGlobal","cmpClient","MODE_CALLBACK","MODE_MIXED","MODE_RETURN","GreedyPromise","buildActivityParams","DEFAULT_CMP","DEFAULT_CONSENT_TIMEOUT","userCMP","consentTimeout","staticConsentData","consentData","addedConsentHook","pipeCallbacks","fn","_ref","onSuccess","onError","resolve","then","err","GPPError","apply","message","concat","_toConsumableArray","args","lookupStaticConsentData","callbacks","processCmpData","GPP_10","GPP_11","_createClass","arg","_classCallCheck","_resolve","WeakMap","_reject","_pending","GPPClient","cmpVersion","cmp","_this","_classPrivateFieldInitSpec","writable","value","_defineProperty","apiVersion","constructor","_map","map","slot","result","_classPrivateFieldGet","length","pop","_map2","_slicedToArray","_classPrivateFieldDestructureSet","key","init","pingData","_this2","ready","updateWhenReady","initialized","command","callback","event","success","_event$pingData","call","cmpStatus","isCMPReady","events","includes","eventName","updateConsent","refresh","bind","getGPPData","data","nextUpdate","_this3","reject","push","register","defaultVersion","arguments","undefined","CLIENTS","default","_this4","mkCmp","inst","INST","reset","ping","catch","e","_ref2","_ref3","client","_this5","cmpOptions","apiName","apiArgs","probe","_objectSpread","mode","done","pong","gppVersion","Client","getClient","res","finally","close","hasOwnProperty","GPP10Client","_GPPClient","_inherits","_super","_createSuper","_this6","_len","Array","_key","_assertThisInitialized","_this7","parsedSections","all","supportedAPIs","apiSupport","api","parameter","section","sections","Object","fromEntries","filter","_ref4","_ref5","_","val","_ref6","_ref7","subsections","entries","_ref8","_ref9","k","Gpc","SubsectionType","_ref10","_ref11","gppData","assign","_get","_getPrototypeOf","GPP11Client","_GPPClient2","_super2","_this8","_len2","_key2","signalStatus","lookupIabConsent","_ref12","_ref13","_ref14","gppDataPm","cmpCallMap","loadConsentData","cb","isDone","timer","shouldCancelAuction","errMsg","clearTimeout","setConsentData","_len3","extraArgs","_key3","msg","_len4","_key4","onTimeout","continueToAuction","storeConsentData","setTimeout","loadIfMissing","requestBidsHook","reqBidsConfigObj","log","_len5","_key5","stopTiming","bidsBackHandler","applicableSections","isArray","gppString","resetConsentData","setConsentConfig","gpp","_typeof","cmpApi","timeout","requestBids","before","next","params","gppConsent","getConsentData","enable","getConfig","consentManagement","enrichFPDHook","fpd","ortb2","consent"],"sourceRoot":""}