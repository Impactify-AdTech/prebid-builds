{"version":3,"file":"consentManagement.js","mappings":"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","sources":["webpack://prebid.js/./modules/consentManagement.js","webpack://prebid.js/./src/pbjsORTB.js"],"sourcesContent":["/**\n * This module adds GDPR consentManagement support to prebid.js.  It interacts with\n * supported CMPs (Consent Management Platforms) to grab the user's consent information\n * and make it available for any GDPR supported adapters to read/pass this information to\n * their system.\n */\nimport {deepSetValue, isNumber, isPlainObject, isStr, logError, logInfo, logWarn} from '../src/utils.js';\nimport {config} from '../src/config.js';\nimport {gdprDataHandler} from '../src/adapterManager.js';\nimport {includes} from '../src/polyfill.js';\nimport {timedAuctionHook} from '../src/utils/perfMetrics.js';\nimport {registerOrtbProcessor, REQUEST} from '../src/pbjsORTB.js';\nimport {enrichFPD} from '../src/fpd/enrichment.js';\nimport {getGlobal} from '../src/prebidGlobal.js';\nimport {cmpClient} from '../libraries/cmp/cmpClient.js';\n\nconst DEFAULT_CMP = 'iab';\nconst DEFAULT_CONSENT_TIMEOUT = 10000;\nconst CMP_VERSION = 2;\n\nexport let userCMP;\nexport let consentTimeout;\nexport let gdprScope;\nexport let staticConsentData;\nlet actionTimeout;\n\nlet consentData;\nlet addedConsentHook = false;\n\n// add new CMPs here, with their dedicated lookup function\nconst cmpCallMap = {\n  'iab': lookupIabConsent,\n  'static': lookupStaticConsentData\n};\n\n/**\n * This function reads the consent string from the config to obtain the consent information of the user.\n * @param {function({})} onSuccess acts as a success callback when the value is read from config; pass along consentObject from CMP\n */\nfunction lookupStaticConsentData({onSuccess, onError}) {\n  processCmpData(staticConsentData, {onSuccess, onError})\n}\n\n/**\n * This function handles interacting with an IAB compliant CMP to obtain the consent information of the user.\n * Given the async nature of the CMP's API, we pass in acting success/error callback functions to exit this function\n * based on the appropriate result.\n * @param {function({})} onSuccess acts as a success callback when CMP returns a value; pass along consentObjectfrom CMP\n * @param {function(string, ...{}?)} cmpError acts as an error callback while interacting with CMP; pass along an error message (string) and any extra error arguments (purely for logging)\n */\nfunction lookupIabConsent({onSuccess, onError, onEvent}) {\n  function cmpResponseCallback(tcfData, success) {\n    logInfo('Received a response from CMP', tcfData);\n    if (success) {\n      onEvent(tcfData);\n      if (tcfData.gdprApplies === false || tcfData.eventStatus === 'tcloaded' || tcfData.eventStatus === 'useractioncomplete') {\n        processCmpData(tcfData, {onSuccess, onError});\n      }\n    } else {\n      onError('CMP unable to register callback function.  Please check CMP setup.');\n    }\n  }\n\n  const cmp = cmpClient({\n    apiName: '__tcfapi',\n    apiVersion: CMP_VERSION,\n    apiArgs: ['command', 'version', 'callback', 'parameter'],\n  });\n\n  if (!cmp) {\n    return onError('TCF2 CMP not found.');\n  }\n  if (cmp.isDirect) {\n    logInfo('Detected CMP API is directly accessible, calling it now...');\n  } else {\n    logInfo('Detected CMP is outside the current iframe where Prebid.js is located, calling it now...');\n  }\n\n  cmp({\n    command: 'addEventListener',\n    callback: cmpResponseCallback\n  })\n}\n\n/**\n * Look up consent data and store it in the `consentData` global as well as `adapterManager.js`' gdprDataHandler.\n *\n * @param cb A callback that takes: a boolean that is true if the auction should be canceled; an error message and extra\n * error arguments that will be undefined if there's no error.\n */\nfunction loadConsentData(cb) {\n  let isDone = false;\n  let timer = null;\n  let onTimeout, provisionalConsent;\n  let cmpLoaded = false;\n\n  function resetTimeout(timeout) {\n    if (timer != null) {\n      clearTimeout(timer);\n    }\n    if (!isDone && timeout != null) {\n      if (timeout === 0) {\n        onTimeout()\n      } else {\n        timer = setTimeout(onTimeout, timeout);\n      }\n    }\n  }\n\n  function done(consentData, shouldCancelAuction, errMsg, ...extraArgs) {\n    resetTimeout(null);\n    isDone = true;\n    gdprDataHandler.setConsentData(consentData);\n    if (typeof cb === 'function') {\n      cb(shouldCancelAuction, errMsg, ...extraArgs);\n    }\n  }\n\n  if (!includes(Object.keys(cmpCallMap), userCMP)) {\n    done(null, false, `CMP framework (${userCMP}) is not a supported framework.  Aborting consentManagement module and resuming auction.`);\n    return;\n  }\n\n  const callbacks = {\n    onSuccess: (data) => done(data, false),\n    onError: function (msg, ...extraArgs) {\n      done(null, true, msg, ...extraArgs);\n    },\n    onEvent: function (consentData) {\n      provisionalConsent = consentData;\n      if (cmpLoaded) return;\n      cmpLoaded = true;\n      if (actionTimeout != null) {\n        resetTimeout(actionTimeout);\n      }\n    }\n  }\n\n  onTimeout = () => {\n    const continueToAuction = (data) => {\n      done(data, false, `${cmpLoaded ? 'Timeout waiting for user action on CMP' : 'CMP did not load'}, continuing auction...`);\n    }\n    processCmpData(provisionalConsent, {\n      onSuccess: continueToAuction,\n      onError: () => continueToAuction(storeConsentData(undefined)),\n    })\n  }\n\n  cmpCallMap[userCMP](callbacks);\n  if (!(actionTimeout != null && cmpLoaded)) {\n    resetTimeout(consentTimeout);\n  }\n}\n\n/**\n * Like `loadConsentData`, but cache and re-use previously loaded data.\n * @param cb\n */\nfunction loadIfMissing(cb) {\n  if (consentData) {\n    logInfo('User consent information already known.  Pulling internally stored information...');\n    // eslint-disable-next-line standard/no-callback-literal\n    cb(false);\n  } else {\n    loadConsentData(cb);\n  }\n}\n\n/**\n * If consentManagement module is enabled (ie included in setConfig), this hook function will attempt to fetch the\n * user's encoded consent string from the supported CMP.  Once obtained, the module will store this\n * data as part of a gdprConsent object which gets transferred to adapterManager's gdprDataHandler object.\n * This information is later added into the bidRequest object for any supported adapters to read/pass along to their system.\n * @param {object} reqBidsConfigObj required; This is the same param that's used in pbjs.requestBids.\n * @param {function} fn required; The next function in the chain, used by hook.js\n */\nexport const requestBidsHook = timedAuctionHook('gdpr', function requestBidsHook(fn, reqBidsConfigObj) {\n  loadIfMissing(function (shouldCancelAuction, errMsg, ...extraArgs) {\n    if (errMsg) {\n      let log = logWarn;\n      if (shouldCancelAuction) {\n        log = logError;\n        errMsg = `${errMsg} Canceling auction as per consentManagement config.`;\n      }\n      log(errMsg, ...extraArgs);\n    }\n\n    if (shouldCancelAuction) {\n      fn.stopTiming();\n      if (typeof reqBidsConfigObj.bidsBackHandler === 'function') {\n        reqBidsConfigObj.bidsBackHandler();\n      } else {\n        logError('Error executing bidsBackHandler');\n      }\n    } else {\n      fn.call(this, reqBidsConfigObj);\n    }\n  });\n});\n\n/**\n * This function checks the consent data provided by CMP to ensure it's in an expected state.\n * If it's bad, we call `onError`\n * If it's good, then we store the value and call `onSuccess`\n */\nfunction processCmpData(consentObject, {onSuccess, onError}) {\n  function checkData() {\n    // if CMP does not respond with a gdprApplies boolean, use defaultGdprScope (gdprScope)\n    const gdprApplies = consentObject && typeof consentObject.gdprApplies === 'boolean' ? consentObject.gdprApplies : gdprScope;\n    const tcString = consentObject && consentObject.tcString;\n    return !!(\n      (typeof gdprApplies !== 'boolean') ||\n      (gdprApplies === true && (!tcString || !isStr(tcString)))\n    );\n  }\n\n  if (checkData()) {\n    onError(`CMP returned unexpected value during lookup process.`, consentObject);\n  } else {\n    onSuccess(storeConsentData(consentObject));\n  }\n}\n\n/**\n * Stores CMP data locally in module to make information available in adaptermanager.js for later in the auction\n * @param {object} cmpConsentObject required; an object representing user's consent choices (can be undefined in certain use-cases for this function only)\n */\nfunction storeConsentData(cmpConsentObject) {\n  consentData = {\n    consentString: (cmpConsentObject) ? cmpConsentObject.tcString : undefined,\n    vendorData: (cmpConsentObject) || undefined,\n    gdprApplies: cmpConsentObject && typeof cmpConsentObject.gdprApplies === 'boolean' ? cmpConsentObject.gdprApplies : gdprScope\n  };\n  if (cmpConsentObject && cmpConsentObject.addtlConsent && isStr(cmpConsentObject.addtlConsent)) {\n    consentData.addtlConsent = cmpConsentObject.addtlConsent;\n  }\n  consentData.apiVersion = CMP_VERSION;\n  return consentData;\n}\n\n/**\n * Simply resets the module's consentData variable back to undefined, mainly for testing purposes\n */\nexport function resetConsentData() {\n  consentData = undefined;\n  userCMP = undefined;\n  consentTimeout = undefined;\n  gdprDataHandler.reset();\n}\n\n/**\n * A configuration function that initializes some module variables, as well as add a hook into the requestBids function\n * @param {{cmp:string, timeout:number, defaultGdprScope:boolean}} config required; consentManagement module config settings; cmp (string), timeout (int))\n */\nexport function setConsentConfig(config) {\n  // if `config.gdpr`, `config.usp` or `config.gpp` exist, assume new config format.\n  // else for backward compatability, just use `config`\n  config = config && (config.gdpr || config.usp || config.gpp ? config.gdpr : config);\n  if (!config || typeof config !== 'object') {\n    logWarn('consentManagement (gdpr) config not defined, exiting consent manager');\n    return;\n  }\n  if (isStr(config.cmpApi)) {\n    userCMP = config.cmpApi;\n  } else {\n    userCMP = DEFAULT_CMP;\n    logInfo(`consentManagement config did not specify cmp.  Using system default setting (${DEFAULT_CMP}).`);\n  }\n\n  if (isNumber(config.timeout)) {\n    consentTimeout = config.timeout;\n  } else {\n    consentTimeout = DEFAULT_CONSENT_TIMEOUT;\n    logInfo(`consentManagement config did not specify timeout.  Using system default setting (${DEFAULT_CONSENT_TIMEOUT}).`);\n  }\n\n  actionTimeout = isNumber(config.actionTimeout) ? config.actionTimeout : null;\n\n  // if true, then gdprApplies should be set to true\n  gdprScope = config.defaultGdprScope === true;\n\n  logInfo('consentManagement module has been activated...');\n\n  if (userCMP === 'static') {\n    if (isPlainObject(config.consentData)) {\n      staticConsentData = config.consentData;\n      if (staticConsentData?.getTCData != null) {\n        // accept static config with or without `getTCData` - see https://github.com/prebid/Prebid.js/issues/9581\n        staticConsentData = staticConsentData.getTCData;\n      }\n      consentTimeout = 0;\n    } else {\n      logError(`consentManagement config with cmpApi: 'static' did not specify consentData. No consents will be available to adapters.`);\n    }\n  }\n  if (!addedConsentHook) {\n    getGlobal().requestBids.before(requestBidsHook, 50);\n  }\n  addedConsentHook = true;\n  gdprDataHandler.enable();\n  loadConsentData(); // immediately look up consent data to make it available without requiring an auction\n}\nconfig.getConfig('consentManagement', config => setConsentConfig(config.consentManagement));\n\nexport function enrichFPDHook(next, fpd) {\n  return next(fpd.then(ortb2 => {\n    const consent = gdprDataHandler.getConsentData();\n    if (consent) {\n      if (typeof consent.gdprApplies === 'boolean') {\n        deepSetValue(ortb2, 'regs.ext.gdpr', consent.gdprApplies ? 1 : 0);\n      }\n      deepSetValue(ortb2, 'user.ext.consent', consent.consentString);\n    }\n    return ortb2;\n  }));\n}\n\nenrichFPD.before(enrichFPDHook);\n\nexport function setOrtbAdditionalConsent(ortbRequest, bidderRequest) {\n  // this is not a standardized name for addtlConsent, so keep this as an ORTB library processor rather than an FPD enrichment\n  const addtl = bidderRequest.gdprConsent?.addtlConsent;\n  if (addtl && typeof addtl === 'string') {\n    deepSetValue(ortbRequest, 'user.ext.ConsentedProvidersSettings.consented_providers', addtl);\n  }\n}\n\nregisterOrtbProcessor({type: REQUEST, name: 'gdprAddtlConsent', fn: setOrtbAdditionalConsent})\n","export const PROCESSOR_TYPES = ['request', 'imp', 'bidResponse', 'response'];\nexport const PROCESSOR_DIALECTS = ['default', 'pbs'];\nexport const [REQUEST, IMP, BID_RESPONSE, RESPONSE] = PROCESSOR_TYPES;\nexport const [DEFAULT, PBS] = PROCESSOR_DIALECTS;\n\nconst types = new Set(PROCESSOR_TYPES);\n\nexport function processorRegistry() {\n  const processors = {};\n\n  return {\n    registerOrtbProcessor({type, name, fn, priority = 0, dialects = [DEFAULT]}) {\n      if (!types.has(type)) {\n        throw new Error(`ORTB processor type must be one of: ${PROCESSOR_TYPES.join(', ')}`)\n      }\n      dialects.forEach(dialect => {\n        if (!processors.hasOwnProperty(dialect)) {\n          processors[dialect] = {};\n        }\n        if (!processors[dialect].hasOwnProperty(type)) {\n          processors[dialect][type] = {};\n        }\n        processors[dialect][type][name] = {\n          priority,\n          fn\n        }\n      })\n    },\n    getProcessors(dialect) {\n      return processors[dialect] || {};\n    }\n  }\n}\n\nexport const {registerOrtbProcessor, getProcessors} = processorRegistry();\n"],"names":["registerModule","__r0","deepSetValue","isNumber","isPlainObject","isStr","logError","logInfo","logWarn","config","gdprDataHandler","includes","timedAuctionHook","registerOrtbProcessor","REQUEST","enrichFPD","getGlobal","cmpClient","DEFAULT_CMP","DEFAULT_CONSENT_TIMEOUT","CMP_VERSION","userCMP","consentTimeout","gdprScope","staticConsentData","actionTimeout","consentData","addedConsentHook","cmpCallMap","lookupIabConsent","lookupStaticConsentData","_ref","onSuccess","onError","processCmpData","_ref2","onEvent","cmpResponseCallback","tcfData","success","gdprApplies","eventStatus","cmp","apiName","apiVersion","apiArgs","isDirect","command","callback","loadConsentData","cb","isDone","timer","onTimeout","provisionalConsent","cmpLoaded","resetTimeout","timeout","clearTimeout","setTimeout","done","shouldCancelAuction","errMsg","setConsentData","_len","arguments","length","extraArgs","Array","_key","apply","concat","Object","keys","callbacks","data","msg","_len2","_key2","continueToAuction","storeConsentData","undefined","loadIfMissing","requestBidsHook","fn","reqBidsConfigObj","log","_len3","_key3","stopTiming","bidsBackHandler","call","consentObject","_ref3","checkData","tcString","cmpConsentObject","consentString","vendorData","addtlConsent","resetConsentData","reset","setConsentConfig","gdpr","usp","gpp","_typeof","cmpApi","defaultGdprScope","_staticConsentData","getTCData","requestBids","before","enable","getConfig","consentManagement","enrichFPDHook","next","fpd","then","ortb2","consent","getConsentData","setOrtbAdditionalConsent","ortbRequest","bidderRequest","_bidderRequest$gdprCo","addtl","gdprConsent","type","name","PROCESSOR_TYPES","PROCESSOR_DIALECTS","IMP","BID_RESPONSE","RESPONSE","DEFAULT","PBS","types","Set","processorRegistry","processors","_ref$priority","priority","_ref$dialects","dialects","has","Error","join","forEach","dialect","hasOwnProperty","getProcessors","_processorRegistry"],"sourceRoot":""}